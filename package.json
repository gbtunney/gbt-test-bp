{
    "name": "@gbt/root",
    "private": true,
    "version": "0,0,0",
    "description": "Boilerplate for monorepo root",
    "scripts": {
        "\n========== COMMIT >> ==========": "",
        "commit": "pnpm run commit:before && pnpm commit:cz",
        "commit:cz": "pnpm exec git-cz",
        "commit:before": "pnpm build:self && pnpm run lint:staged",
        "commit:build-config": "pnpm nx:build:config && pnpm build:self && pnpm exec git-cz",
        "lint:staged": "pnpm exec lint-staged --relative --debug",
        "lint:all": "pnpm fix && pnpm build",
        "\n========== INSPECT >>==========": "",
        "inspect:lint": "pnpm exec eslint  --inspect-config ",
        "inspect:vitest": "pnpm exec vitest --ui",
        "\n========== BUILD >> ==========": "",
        "build": "pnpm build:self && pnpm build:all",
        "build:self": "pnpm exec tsc --build",
        "build:all": "pnpm workspace build",
        "\n========== TEST >> ==========": "",
        "test": "pnpm workspace test",
        "\n========== CLEAN >> ==========": "",
        "clean": "pnpm clean:self && pnpm clean:all",
        "clean:self": "pnpm exec tsc --build --clean",
        "clean:all": "pnpm workspace  clean",
        "\n========== LIFECYCLE >> ==========": "",
        "prepare": "husky",
        "pre:commit": "echo '\n===\n>> Todo:: enable `pnpm exec lint-staged --debug`'",
        "postinstall": "echo '\n=== >> Success:: Install complete.'",
        "workspace": "pnpm --filter='!(*)'",
        "\n========== PUBLISH >> ==========": "",
        "release": "pnpm run prerelease && pnpm changeset",
        "prerelease": "pnpm run build && pnpm run fix && pnpm run check && pnpm test",
        "\n========== WORKFLOW >> ==========": "",
        "workflow:archive": "pnpm install && open /Applications/Docker.app && cross-var pnpm exec gh act --workflows  ./.github/workflows/workflow-build.yml --reuse",
        "registry:start": "pnpm exec verdaccio",
        "\n========== CODE STYLE >> ==========": "",
        "prettier": "cross-var prettier {*,**/*}.{xml,ts,js,cts,cjs,mts,mjs,tsx,jsx,sh,html,json,yaml,yml,graphql,md} ./.husky/* --ignore-path ./.gitignore --no-error-on-unmatched-pattern --config ./prettier.config.js",
        "lint": "cross-var eslint -c $npm_package_config_eslint_config",
        "lint:md": "pnpm exec markdownlint-cli2 '{./*,./**/*}.md' '#**/{node_modules,.changeset,docs}/**' '#packages/cli-template/templates/**/*'",
        "\n========== CHECK >> ==========": "",
        "check": "pnpm check:self",
        "check:md": "pnpm run lint:md",
        "check:self": "pnpm lint && pnpm prettier --check",
        "prettier:write": "pnpm prettier --write",
        "\n========== FIX >> ==========": "",
        "fix": "pnpm fix:self",
        "fix:md": "pnpm run lint:md --fix",
        "fix:self": "pnpm prettier --write && pnpm lint --fix",
        "\n========== UNINSTALL >> ==========": "",
        "uninstall": "pnpm run clean && pnpm uninstall:list && pnpm run uninstall:rm && pnpm run uninstall:lock",
        "uninstall:list": "find . -name 'node_modules' -type d -prune",
        "uninstall:rm": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
        "uninstall:lock": "rm -f pnpm-lock.yaml && rm -f packages/**/pnpm-lock.yaml"
    },
    "keywords": [
        "boilerplate"
    ],
    "files": [
        "types",
        "dist",
        "CHANGELOG.md"
    ],
    "devDependencies": {
        "@changesets/cli": "^2.29.4",
        "@commitlint/cli": "^19.8.1",
        "@commitlint/config-conventional": "^19.8.1",
        "@commitlint/cz-commitlint": "^19.8.1",
        "@commitlint/types": "^19.8.1",
        "@eslint/config-inspector": "^1.0.2",
        "@prettier/plugin-xml": "^3.4.1",
        "@snailicide/build-config": "^1.4.1",
        "@types/node": "^22.15.19",
        "@types/shelljs": "^0.8.16",
        "commitizen": "^4.3.1",
        "cross-var": "^1.1.0",
        "eslint": "^9.27.0",
        "husky": "^9.1.7",
        "lint-staged": "^16.0.0",
        "markdownlint-cli2": "^0.18.1",
        "prettier": "^3.5.3",
        "prettier-plugin-jsdoc": "^1.3.2",
        "prettier-plugin-sh": "^0.17.4",
        "tsx": "^4.19.4",
        "typescript": "^5.8.3",
        "typescript-eslint": "^8.32.1",
        "verdaccio": "^6.1.2",
        "vitepress": "^1.6.3",
        "vitest": "^3.1.3"
    },
    "license": "MIT",
    "type": "module",
    "author": {
        "name": "Gillian Tunney",
        "email": "gbtunney@mac.com"
    },
    "homepage": "https://github.com/gbtunney/gbt-boilerplate",
    "repository": {
        "type": "git",
        "url": "https://github.com/gbtunney/gbt-boilerplate"
    },
    "config": {
        "prettier": {
            "extensions": "ts,js,cjs,mjs,cts,mts,sh,html,json,yaml,yml,graphql,md",
            "path": "*,**/*",
            "config": "prettier.config.js"
        },
        "eslint": {
            "config": "eslint.config.js"
        },
        "commitizen": {
            "path": "@commitlint/cz-commitlint"
        }
    },
    "engines": {
        "node": ">=18.7.0 <22.0.0",
        "pnpm": ">=10.0.0"
    },
    "packageManager": "pnpm@10.9.0"
}
